# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=bonaire -O0 -run-pass=legalizer %s -o - | FileCheck -check-prefix=CI %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=fiji -O0 -run-pass=legalizer %s -o - | FileCheck -check-prefix=VI %s
# RUN: llc -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx900 -O0 -run-pass=legalizer %s -o - | FileCheck -check-prefix=GFX9 %s

---
name: test_load_private_s32_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s32_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: $vgpr0 = COPY [[LOAD]](s32)
    ; VI-LABEL: name: test_load_private_s32_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: $vgpr0 = COPY [[LOAD]](s32)
    ; GFX9-LABEL: name: test_load_private_s32_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: $vgpr0 = COPY [[LOAD]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(s32) = G_LOAD %0 :: (load 4, addrspace 5, align 4)

    $vgpr0 = COPY %1
...

---
name: test_load_private_s32_align1
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s32_align1
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 3
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; CI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; CI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C3]]
    ; CI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; CI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C4]]
    ; CI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND1]], [[C5]](s32)
    ; CI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND]], [[SHL]]
    ; CI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; CI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C6]]
    ; CI: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CI: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[AND2]], [[C7]](s32)
    ; CI: [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
    ; CI: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; CI: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[C8]]
    ; CI: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; CI: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[AND3]], [[C9]](s32)
    ; CI: [[OR2:%[0-9]+]]:_(s32) = G_OR [[OR1]], [[SHL2]]
    ; CI: $vgpr0 = COPY [[OR2]](s32)
    ; VI-LABEL: name: test_load_private_s32_align1
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 3
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; VI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; VI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C3]]
    ; VI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; VI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C4]]
    ; VI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND1]], [[C5]](s32)
    ; VI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND]], [[SHL]]
    ; VI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; VI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C6]]
    ; VI: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; VI: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[AND2]], [[C7]](s32)
    ; VI: [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
    ; VI: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; VI: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[C8]]
    ; VI: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; VI: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[AND3]], [[C9]](s32)
    ; VI: [[OR2:%[0-9]+]]:_(s32) = G_OR [[OR1]], [[SHL2]]
    ; VI: $vgpr0 = COPY [[OR2]](s32)
    ; GFX9-LABEL: name: test_load_private_s32_align1
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 3
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; GFX9: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C3]]
    ; GFX9: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY2:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; GFX9: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C4]]
    ; GFX9: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND1]], [[C5]](s32)
    ; GFX9: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND]], [[SHL]]
    ; GFX9: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; GFX9: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C6]]
    ; GFX9: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX9: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[AND2]], [[C7]](s32)
    ; GFX9: [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
    ; GFX9: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; GFX9: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[C8]]
    ; GFX9: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX9: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[AND3]], [[C9]](s32)
    ; GFX9: [[OR2:%[0-9]+]]:_(s32) = G_OR [[OR1]], [[SHL2]]
    ; GFX9: $vgpr0 = COPY [[OR2]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(s32) = G_LOAD %0 :: (load 4, addrspace 5, align 1)

    $vgpr0 = COPY %1
...

---
name: test_load_private_s32_align2
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s32_align2
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; CI: [[MV:%[0-9]+]]:_(s32) = G_MERGE_VALUES [[TRUNC]](s16), [[TRUNC1]](s16)
    ; CI: $vgpr0 = COPY [[MV]](s32)
    ; VI-LABEL: name: test_load_private_s32_align2
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; VI: [[MV:%[0-9]+]]:_(s32) = G_MERGE_VALUES [[TRUNC]](s16), [[TRUNC1]](s16)
    ; VI: $vgpr0 = COPY [[MV]](s32)
    ; GFX9-LABEL: name: test_load_private_s32_align2
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; GFX9: [[MV:%[0-9]+]]:_(s32) = G_MERGE_VALUES [[TRUNC]](s16), [[TRUNC1]](s16)
    ; GFX9: $vgpr0 = COPY [[MV]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(s32) = G_LOAD %0 :: (load 4, addrspace 5, align 2)

    $vgpr0 = COPY %1
...

---
name: test_load_private_s64_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s64_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[MV]](s64)
    ; VI-LABEL: name: test_load_private_s64_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[MV]](s64)
    ; GFX9-LABEL: name: test_load_private_s64_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[MV]](s64)
    %0:_(p5) = COPY $vgpr0
    %1:_(s64) = G_LOAD %0 :: (load 8, addrspace 5, align 4)

    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_s64_align8
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s64_align8
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[MV]](s64)
    ; VI-LABEL: name: test_load_private_s64_align8
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[MV]](s64)
    ; GFX9-LABEL: name: test_load_private_s64_align8
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[MV]](s64)
    %0:_(p5) = COPY $vgpr0
    %1:_(s64) = G_LOAD %0 :: (load 8, addrspace 5, align 8)

    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_s96_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s96_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s96) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; CI: $vgpr0_vgpr1_vgpr2 = COPY [[MV]](s96)
    ; VI-LABEL: name: test_load_private_s96_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s96) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; VI: $vgpr0_vgpr1_vgpr2 = COPY [[MV]](s96)
    ; GFX9-LABEL: name: test_load_private_s96_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s96) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2 = COPY [[MV]](s96)
    %0:_(p5) = COPY $vgpr0
    %1:_(s96) = G_LOAD %0 :: (load 12, addrspace 5, align 4)

    $vgpr0_vgpr1_vgpr2 = COPY %1
...

---
name: test_load_private_s128_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s128_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    ; VI-LABEL: name: test_load_private_s128_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    ; GFX9-LABEL: name: test_load_private_s128_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    %0:_(p5) = COPY $vgpr0
    %1:_(s128) = G_LOAD %0 :: (load 16, addrspace 5, align 4)

    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_load_private_s128_align16
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s128_align16
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    ; VI-LABEL: name: test_load_private_s128_align16
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    ; GFX9-LABEL: name: test_load_private_s128_align16
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[MV]](s128)
    %0:_(p5) = COPY $vgpr0
    %1:_(s128) = G_LOAD %0 :: (load 16, addrspace 5, align 16)

    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_load_private_s16_align2
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s16_align2
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; CI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; CI: $vgpr0 = COPY [[COPY1]](s32)
    ; VI-LABEL: name: test_load_private_s16_align2
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; VI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; VI: $vgpr0 = COPY [[COPY1]](s32)
    ; GFX9-LABEL: name: test_load_private_s16_align2
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; GFX9: $vgpr0 = COPY [[COPY1]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(s16) = G_LOAD %0 :: (load 2, addrspace 5, align 2)
    %2:_(s32) = G_ANYEXT %1
    $vgpr0 = COPY %2
...

---
name: test_load_private_s16_align1
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s16_align1
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; CI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C2]]
    ; CI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; CI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C3]]
    ; CI: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND]], [[AND1]](s32)
    ; CI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; CI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C4]]
    ; CI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; CI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND2]], [[COPY4]]
    ; CI: [[COPY5:%[0-9]+]]:_(s32) = COPY [[OR]](s32)
    ; CI: $vgpr0 = COPY [[COPY5]](s32)
    ; VI-LABEL: name: test_load_private_s16_align1
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; VI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; VI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[COPY2]]
    ; VI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[AND]](s32)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[C2]](s32)
    ; VI: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[TRUNC1]](s16)
    ; VI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; VI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C3]]
    ; VI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL]](s16)
    ; VI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND1]], [[ANYEXT]]
    ; VI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[OR]](s32)
    ; VI: $vgpr0 = COPY [[COPY4]](s32)
    ; GFX9-LABEL: name: test_load_private_s16_align1
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; GFX9: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX9: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[COPY2]]
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[AND]](s32)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[C2]](s32)
    ; GFX9: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[TRUNC1]](s16)
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; GFX9: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C3]]
    ; GFX9: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL]](s16)
    ; GFX9: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND1]], [[ANYEXT]]
    ; GFX9: [[COPY4:%[0-9]+]]:_(s32) = COPY [[OR]](s32)
    ; GFX9: $vgpr0 = COPY [[COPY4]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(s16) = G_LOAD %0 :: (load 2, addrspace 5, align 1)
    %2:_(s32) = G_ANYEXT %1
    $vgpr0 = COPY %2
...

---
name: test_load_private_s16_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_s16_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, align 4, addrspace 5)
    ; CI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; CI: $vgpr0 = COPY [[COPY1]](s32)
    ; VI-LABEL: name: test_load_private_s16_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, align 4, addrspace 5)
    ; VI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; VI: $vgpr0 = COPY [[COPY1]](s32)
    ; GFX9-LABEL: name: test_load_private_s16_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, align 4, addrspace 5)
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; GFX9: $vgpr0 = COPY [[COPY1]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(s16) = G_LOAD %0 :: (load 2, addrspace 5, align 4)
    %2:_(s32) = G_ANYEXT %1
    $vgpr0 = COPY %2
...

---
name: test_load_private_v2s8_align2
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s8_align2
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(<2 x s8>) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; CI: [[BITCAST:%[0-9]+]]:_(s16) = G_BITCAST [[LOAD]](<2 x s8>)
    ; CI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[BITCAST]](s16)
    ; CI: $vgpr0 = COPY [[ANYEXT]](s32)
    ; VI-LABEL: name: test_load_private_v2s8_align2
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(<2 x s8>) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; VI: [[BITCAST:%[0-9]+]]:_(s16) = G_BITCAST [[LOAD]](<2 x s8>)
    ; VI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[BITCAST]](s16)
    ; VI: $vgpr0 = COPY [[ANYEXT]](s32)
    ; GFX9-LABEL: name: test_load_private_v2s8_align2
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(<2 x s8>) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[BITCAST:%[0-9]+]]:_(s16) = G_BITCAST [[LOAD]](<2 x s8>)
    ; GFX9: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[BITCAST]](s16)
    ; GFX9: $vgpr0 = COPY [[ANYEXT]](s32)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s8>) = G_LOAD %0 :: (load 2, addrspace 5, align 2)
    %2:_(s16) = G_BITCAST %1
    %3:_(s32) = G_ANYEXT %2
    $vgpr0 = COPY %3
...

---
name: test_load_private_v2s8_align1
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s8_align1
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; CI: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[LOAD]](s32)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; CI: [[TRUNC1:%[0-9]+]]:_(s8) = G_TRUNC [[LOAD1]](s32)
    ; CI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC]](s8)
    ; CI: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC1]](s8)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[ANYEXT]](s32), [[ANYEXT1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; VI-LABEL: name: test_load_private_v2s8_align1
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; VI: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[LOAD]](s32)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; VI: [[TRUNC1:%[0-9]+]]:_(s8) = G_TRUNC [[LOAD1]](s32)
    ; VI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC]](s8)
    ; VI: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC1]](s8)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[ANYEXT]](s32), [[ANYEXT1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; GFX9-LABEL: name: test_load_private_v2s8_align1
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[LOAD]](s32)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s8) = G_TRUNC [[LOAD1]](s32)
    ; GFX9: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC]](s8)
    ; GFX9: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC1]](s8)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[ANYEXT]](s32), [[ANYEXT1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s8>) = G_LOAD %0 :: (load 2, addrspace 5, align 1)
    %2:_(<2 x s32>) = G_ANYEXT %1
    $vgpr0_vgpr1 = COPY %2
...

---
name: test_load_private_v2s16_align1
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s16_align1
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; CI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C2]]
    ; CI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; CI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C3]]
    ; CI: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND]], [[AND1]](s32)
    ; CI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; CI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C4]]
    ; CI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; CI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND2]], [[COPY4]]
    ; CI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[OR]](s32)
    ; CI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C5]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; CI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C6]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; CI: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY5:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; CI: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY5]], [[C8]]
    ; CI: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY6:%[0-9]+]]:_(s32) = COPY [[C7]](s32)
    ; CI: [[AND4:%[0-9]+]]:_(s32) = G_AND [[COPY6]], [[C9]]
    ; CI: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[AND3]], [[AND4]](s32)
    ; CI: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY7:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; CI: [[AND5:%[0-9]+]]:_(s32) = G_AND [[COPY7]], [[C10]]
    ; CI: [[COPY8:%[0-9]+]]:_(s32) = COPY [[SHL1]](s32)
    ; CI: [[OR1:%[0-9]+]]:_(s32) = G_OR [[AND5]], [[COPY8]]
    ; CI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[OR1]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; CI: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    ; VI-LABEL: name: test_load_private_v2s16_align1
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; VI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; VI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[COPY2]]
    ; VI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[AND]](s32)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[C2]](s32)
    ; VI: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[TRUNC1]](s16)
    ; VI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; VI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C3]]
    ; VI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL]](s16)
    ; VI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND1]], [[ANYEXT]]
    ; VI: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[OR]](s32)
    ; VI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C4]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; VI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C5]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; VI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; VI: [[COPY5:%[0-9]+]]:_(s32) = COPY [[C6]](s32)
    ; VI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[COPY5]]
    ; VI: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[AND2]](s32)
    ; VI: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[C7]](s32)
    ; VI: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC3]], [[TRUNC4]](s16)
    ; VI: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY6:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; VI: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY6]], [[C8]]
    ; VI: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL1]](s16)
    ; VI: [[OR1:%[0-9]+]]:_(s32) = G_OR [[AND3]], [[ANYEXT1]]
    ; VI: [[TRUNC5:%[0-9]+]]:_(s16) = G_TRUNC [[OR1]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC5]](s16)
    ; VI: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    ; GFX9-LABEL: name: test_load_private_v2s16_align1
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; GFX9: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX9: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[COPY2]]
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[AND]](s32)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[C2]](s32)
    ; GFX9: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[TRUNC1]](s16)
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; GFX9: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C3]]
    ; GFX9: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL]](s16)
    ; GFX9: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND1]], [[ANYEXT]]
    ; GFX9: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[OR]](s32)
    ; GFX9: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C4]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C5]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; GFX9: [[COPY5:%[0-9]+]]:_(s32) = COPY [[C6]](s32)
    ; GFX9: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[COPY5]]
    ; GFX9: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[AND2]](s32)
    ; GFX9: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[C7]](s32)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC3]], [[TRUNC4]](s16)
    ; GFX9: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY6:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; GFX9: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY6]], [[C8]]
    ; GFX9: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL1]](s16)
    ; GFX9: [[OR1:%[0-9]+]]:_(s32) = G_OR [[AND3]], [[ANYEXT1]]
    ; GFX9: [[TRUNC5:%[0-9]+]]:_(s16) = G_TRUNC [[OR1]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC5]](s16)
    ; GFX9: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s16>) = G_LOAD %0 :: (load 4, addrspace 5, align 1)
    $vgpr0 = COPY %1
...

---
name: test_load_private_v2s16_align2
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s16_align2
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; CI: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    ; VI-LABEL: name: test_load_private_v2s16_align2
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; VI: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    ; GFX9-LABEL: name: test_load_private_v2s16_align2
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; GFX9: $vgpr0 = COPY [[BUILD_VECTOR]](<2 x s16>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s16>) = G_LOAD %0 :: (load 4, addrspace 5, align 2)
    $vgpr0 = COPY %1
...

---
name: test_load_private_v4s16_align2
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v4s16_align2
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD2]](s32)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 2, addrspace 5)
    ; CI: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD3]](s32)
    ; CI: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC3]](s16)
    ; CI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; CI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; VI-LABEL: name: test_load_private_v4s16_align2
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD2]](s32)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 2, addrspace 5)
    ; VI: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD3]](s32)
    ; VI: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC3]](s16)
    ; VI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; VI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; GFX9-LABEL: name: test_load_private_v4s16_align2
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD]](s32)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD1]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD2]](s32)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 2, addrspace 5)
    ; GFX9: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[LOAD3]](s32)
    ; GFX9: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC3]](s16)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX9: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<4 x s16>) = G_LOAD %0 :: (load 8, addrspace 5, align 2)
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_v4s16_align1
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v4s16_align1
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; CI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C2]]
    ; CI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; CI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY2]], [[C3]]
    ; CI: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND]], [[AND1]](s32)
    ; CI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; CI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C4]]
    ; CI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[SHL]](s32)
    ; CI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND2]], [[COPY4]]
    ; CI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[OR]](s32)
    ; CI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C5]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; CI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C6]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; CI: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY5:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; CI: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY5]], [[C8]]
    ; CI: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY6:%[0-9]+]]:_(s32) = COPY [[C7]](s32)
    ; CI: [[AND4:%[0-9]+]]:_(s32) = G_AND [[COPY6]], [[C9]]
    ; CI: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[AND3]], [[AND4]](s32)
    ; CI: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY7:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; CI: [[AND5:%[0-9]+]]:_(s32) = G_AND [[COPY7]], [[C10]]
    ; CI: [[COPY8:%[0-9]+]]:_(s32) = COPY [[SHL1]](s32)
    ; CI: [[OR1:%[0-9]+]]:_(s32) = G_OR [[AND5]], [[COPY8]]
    ; CI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[OR1]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC]](s16), [[TRUNC1]](s16)
    ; CI: [[C11:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C11]](s32)
    ; CI: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 1, addrspace 5)
    ; CI: [[C12:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C12]](s32)
    ; CI: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 1, addrspace 5)
    ; CI: [[C13:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C14:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY9:%[0-9]+]]:_(s32) = COPY [[LOAD5]](s32)
    ; CI: [[AND6:%[0-9]+]]:_(s32) = G_AND [[COPY9]], [[C14]]
    ; CI: [[C15:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY10:%[0-9]+]]:_(s32) = COPY [[C13]](s32)
    ; CI: [[AND7:%[0-9]+]]:_(s32) = G_AND [[COPY10]], [[C15]]
    ; CI: [[SHL2:%[0-9]+]]:_(s32) = G_SHL [[AND6]], [[AND7]](s32)
    ; CI: [[C16:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY11:%[0-9]+]]:_(s32) = COPY [[LOAD4]](s32)
    ; CI: [[AND8:%[0-9]+]]:_(s32) = G_AND [[COPY11]], [[C16]]
    ; CI: [[COPY12:%[0-9]+]]:_(s32) = COPY [[SHL2]](s32)
    ; CI: [[OR2:%[0-9]+]]:_(s32) = G_OR [[AND8]], [[COPY12]]
    ; CI: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[OR2]](s32)
    ; CI: [[C17:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; CI: [[GEP5:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C17]](s32)
    ; CI: [[LOAD6:%[0-9]+]]:_(s32) = G_LOAD [[GEP5]](p5) :: (load 1, addrspace 5)
    ; CI: [[C18:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CI: [[GEP6:%[0-9]+]]:_(p5) = G_GEP [[GEP5]], [[C18]](s32)
    ; CI: [[LOAD7:%[0-9]+]]:_(s32) = G_LOAD [[GEP6]](p5) :: (load 1, addrspace 5)
    ; CI: [[C19:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[C20:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY13:%[0-9]+]]:_(s32) = COPY [[LOAD7]](s32)
    ; CI: [[AND9:%[0-9]+]]:_(s32) = G_AND [[COPY13]], [[C20]]
    ; CI: [[C21:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CI: [[COPY14:%[0-9]+]]:_(s32) = COPY [[C19]](s32)
    ; CI: [[AND10:%[0-9]+]]:_(s32) = G_AND [[COPY14]], [[C21]]
    ; CI: [[SHL3:%[0-9]+]]:_(s32) = G_SHL [[AND9]], [[AND10]](s32)
    ; CI: [[C22:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; CI: [[COPY15:%[0-9]+]]:_(s32) = COPY [[LOAD6]](s32)
    ; CI: [[AND11:%[0-9]+]]:_(s32) = G_AND [[COPY15]], [[C22]]
    ; CI: [[COPY16:%[0-9]+]]:_(s32) = COPY [[SHL3]](s32)
    ; CI: [[OR3:%[0-9]+]]:_(s32) = G_OR [[AND11]], [[COPY16]]
    ; CI: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[OR3]](s32)
    ; CI: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC3]](s16)
    ; CI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; CI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; VI-LABEL: name: test_load_private_v4s16_align1
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; VI: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; VI: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[COPY2]]
    ; VI: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[AND]](s32)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[C2]](s32)
    ; VI: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[TRUNC1]](s16)
    ; VI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; VI: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C3]]
    ; VI: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL]](s16)
    ; VI: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND1]], [[ANYEXT]]
    ; VI: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[OR]](s32)
    ; VI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C4]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; VI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C5]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; VI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; VI: [[COPY5:%[0-9]+]]:_(s32) = COPY [[C6]](s32)
    ; VI: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[COPY5]]
    ; VI: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[AND2]](s32)
    ; VI: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[C7]](s32)
    ; VI: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC3]], [[TRUNC4]](s16)
    ; VI: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY6:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; VI: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY6]], [[C8]]
    ; VI: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL1]](s16)
    ; VI: [[OR1:%[0-9]+]]:_(s32) = G_OR [[AND3]], [[ANYEXT1]]
    ; VI: [[TRUNC5:%[0-9]+]]:_(s16) = G_TRUNC [[OR1]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC5]](s16)
    ; VI: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C9]](s32)
    ; VI: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 1, addrspace 5)
    ; VI: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C10]](s32)
    ; VI: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 1, addrspace 5)
    ; VI: [[C11:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY7:%[0-9]+]]:_(s32) = COPY [[LOAD5]](s32)
    ; VI: [[COPY8:%[0-9]+]]:_(s32) = COPY [[C11]](s32)
    ; VI: [[AND4:%[0-9]+]]:_(s32) = G_AND [[COPY7]], [[COPY8]]
    ; VI: [[TRUNC6:%[0-9]+]]:_(s16) = G_TRUNC [[AND4]](s32)
    ; VI: [[C12:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC7:%[0-9]+]]:_(s16) = G_TRUNC [[C12]](s32)
    ; VI: [[SHL2:%[0-9]+]]:_(s16) = G_SHL [[TRUNC6]], [[TRUNC7]](s16)
    ; VI: [[C13:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY9:%[0-9]+]]:_(s32) = COPY [[LOAD4]](s32)
    ; VI: [[AND5:%[0-9]+]]:_(s32) = G_AND [[COPY9]], [[C13]]
    ; VI: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL2]](s16)
    ; VI: [[OR2:%[0-9]+]]:_(s32) = G_OR [[AND5]], [[ANYEXT2]]
    ; VI: [[TRUNC8:%[0-9]+]]:_(s16) = G_TRUNC [[OR2]](s32)
    ; VI: [[C14:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; VI: [[GEP5:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C14]](s32)
    ; VI: [[LOAD6:%[0-9]+]]:_(s32) = G_LOAD [[GEP5]](p5) :: (load 1, addrspace 5)
    ; VI: [[C15:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; VI: [[GEP6:%[0-9]+]]:_(p5) = G_GEP [[GEP5]], [[C15]](s32)
    ; VI: [[LOAD7:%[0-9]+]]:_(s32) = G_LOAD [[GEP6]](p5) :: (load 1, addrspace 5)
    ; VI: [[C16:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY10:%[0-9]+]]:_(s32) = COPY [[LOAD7]](s32)
    ; VI: [[COPY11:%[0-9]+]]:_(s32) = COPY [[C16]](s32)
    ; VI: [[AND6:%[0-9]+]]:_(s32) = G_AND [[COPY10]], [[COPY11]]
    ; VI: [[TRUNC9:%[0-9]+]]:_(s16) = G_TRUNC [[AND6]](s32)
    ; VI: [[C17:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[TRUNC10:%[0-9]+]]:_(s16) = G_TRUNC [[C17]](s32)
    ; VI: [[SHL3:%[0-9]+]]:_(s16) = G_SHL [[TRUNC9]], [[TRUNC10]](s16)
    ; VI: [[C18:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; VI: [[COPY12:%[0-9]+]]:_(s32) = COPY [[LOAD6]](s32)
    ; VI: [[AND7:%[0-9]+]]:_(s32) = G_AND [[COPY12]], [[C18]]
    ; VI: [[ANYEXT3:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL3]](s16)
    ; VI: [[OR3:%[0-9]+]]:_(s32) = G_OR [[AND7]], [[ANYEXT3]]
    ; VI: [[TRUNC11:%[0-9]+]]:_(s16) = G_TRUNC [[OR3]](s32)
    ; VI: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC8]](s16), [[TRUNC11]](s16)
    ; VI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; VI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; GFX9-LABEL: name: test_load_private_v4s16_align1
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY1:%[0-9]+]]:_(s32) = COPY [[LOAD1]](s32)
    ; GFX9: [[COPY2:%[0-9]+]]:_(s32) = COPY [[C1]](s32)
    ; GFX9: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[COPY2]]
    ; GFX9: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[AND]](s32)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC1:%[0-9]+]]:_(s16) = G_TRUNC [[C2]](s32)
    ; GFX9: [[SHL:%[0-9]+]]:_(s16) = G_SHL [[TRUNC]], [[TRUNC1]](s16)
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY3:%[0-9]+]]:_(s32) = COPY [[LOAD]](s32)
    ; GFX9: [[AND1:%[0-9]+]]:_(s32) = G_AND [[COPY3]], [[C3]]
    ; GFX9: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL]](s16)
    ; GFX9: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND1]], [[ANYEXT]]
    ; GFX9: [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[OR]](s32)
    ; GFX9: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C4]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C5]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY4:%[0-9]+]]:_(s32) = COPY [[LOAD3]](s32)
    ; GFX9: [[COPY5:%[0-9]+]]:_(s32) = COPY [[C6]](s32)
    ; GFX9: [[AND2:%[0-9]+]]:_(s32) = G_AND [[COPY4]], [[COPY5]]
    ; GFX9: [[TRUNC3:%[0-9]+]]:_(s16) = G_TRUNC [[AND2]](s32)
    ; GFX9: [[C7:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[C7]](s32)
    ; GFX9: [[SHL1:%[0-9]+]]:_(s16) = G_SHL [[TRUNC3]], [[TRUNC4]](s16)
    ; GFX9: [[C8:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY6:%[0-9]+]]:_(s32) = COPY [[LOAD2]](s32)
    ; GFX9: [[AND3:%[0-9]+]]:_(s32) = G_AND [[COPY6]], [[C8]]
    ; GFX9: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL1]](s16)
    ; GFX9: [[OR1:%[0-9]+]]:_(s32) = G_OR [[AND3]], [[ANYEXT1]]
    ; GFX9: [[TRUNC5:%[0-9]+]]:_(s16) = G_TRUNC [[OR1]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC2]](s16), [[TRUNC5]](s16)
    ; GFX9: [[C9:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C9]](s32)
    ; GFX9: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C10:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C10]](s32)
    ; GFX9: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C11:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY7:%[0-9]+]]:_(s32) = COPY [[LOAD5]](s32)
    ; GFX9: [[COPY8:%[0-9]+]]:_(s32) = COPY [[C11]](s32)
    ; GFX9: [[AND4:%[0-9]+]]:_(s32) = G_AND [[COPY7]], [[COPY8]]
    ; GFX9: [[TRUNC6:%[0-9]+]]:_(s16) = G_TRUNC [[AND4]](s32)
    ; GFX9: [[C12:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC7:%[0-9]+]]:_(s16) = G_TRUNC [[C12]](s32)
    ; GFX9: [[SHL2:%[0-9]+]]:_(s16) = G_SHL [[TRUNC6]], [[TRUNC7]](s16)
    ; GFX9: [[C13:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY9:%[0-9]+]]:_(s32) = COPY [[LOAD4]](s32)
    ; GFX9: [[AND5:%[0-9]+]]:_(s32) = G_AND [[COPY9]], [[C13]]
    ; GFX9: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL2]](s16)
    ; GFX9: [[OR2:%[0-9]+]]:_(s32) = G_OR [[AND5]], [[ANYEXT2]]
    ; GFX9: [[TRUNC8:%[0-9]+]]:_(s16) = G_TRUNC [[OR2]](s32)
    ; GFX9: [[C14:%[0-9]+]]:_(s32) = G_CONSTANT i32 2
    ; GFX9: [[GEP5:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C14]](s32)
    ; GFX9: [[LOAD6:%[0-9]+]]:_(s32) = G_LOAD [[GEP5]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C15:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; GFX9: [[GEP6:%[0-9]+]]:_(p5) = G_GEP [[GEP5]], [[C15]](s32)
    ; GFX9: [[LOAD7:%[0-9]+]]:_(s32) = G_LOAD [[GEP6]](p5) :: (load 1, addrspace 5)
    ; GFX9: [[C16:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY10:%[0-9]+]]:_(s32) = COPY [[LOAD7]](s32)
    ; GFX9: [[COPY11:%[0-9]+]]:_(s32) = COPY [[C16]](s32)
    ; GFX9: [[AND6:%[0-9]+]]:_(s32) = G_AND [[COPY10]], [[COPY11]]
    ; GFX9: [[TRUNC9:%[0-9]+]]:_(s16) = G_TRUNC [[AND6]](s32)
    ; GFX9: [[C17:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[TRUNC10:%[0-9]+]]:_(s16) = G_TRUNC [[C17]](s32)
    ; GFX9: [[SHL3:%[0-9]+]]:_(s16) = G_SHL [[TRUNC9]], [[TRUNC10]](s16)
    ; GFX9: [[C18:%[0-9]+]]:_(s32) = G_CONSTANT i32 255
    ; GFX9: [[COPY12:%[0-9]+]]:_(s32) = COPY [[LOAD6]](s32)
    ; GFX9: [[AND7:%[0-9]+]]:_(s32) = G_AND [[COPY12]], [[C18]]
    ; GFX9: [[ANYEXT3:%[0-9]+]]:_(s32) = G_ANYEXT [[SHL3]](s16)
    ; GFX9: [[OR3:%[0-9]+]]:_(s32) = G_OR [[AND7]], [[ANYEXT3]]
    ; GFX9: [[TRUNC11:%[0-9]+]]:_(s16) = G_TRUNC [[OR3]](s32)
    ; GFX9: [[BUILD_VECTOR1:%[0-9]+]]:_(<2 x s16>) = G_BUILD_VECTOR [[TRUNC8]](s16), [[TRUNC11]](s16)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[BUILD_VECTOR]](<2 x s16>), [[BUILD_VECTOR1]](<2 x s16>)
    ; GFX9: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<4 x s16>) = G_LOAD %0 :: (load 8, addrspace 5, align 1)
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_v4s16_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v4s16_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[LOAD]](<2 x s16>), [[LOAD1]](<2 x s16>)
    ; CI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; VI-LABEL: name: test_load_private_v4s16_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[LOAD]](<2 x s16>), [[LOAD1]](<2 x s16>)
    ; VI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; GFX9-LABEL: name: test_load_private_v4s16_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[LOAD]](<2 x s16>), [[LOAD1]](<2 x s16>)
    ; GFX9: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<4 x s16>) = G_LOAD %0 :: (load 8, addrspace 5, align 4)
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_v4s16_align8
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v4s16_align8
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[LOAD]](<2 x s16>), [[LOAD1]](<2 x s16>)
    ; CI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; VI-LABEL: name: test_load_private_v4s16_align8
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[LOAD]](<2 x s16>), [[LOAD1]](<2 x s16>)
    ; VI: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    ; GFX9-LABEL: name: test_load_private_v4s16_align8
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(<2 x s16>) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[CONCAT_VECTORS:%[0-9]+]]:_(<4 x s16>) = G_CONCAT_VECTORS [[LOAD]](<2 x s16>), [[LOAD1]](<2 x s16>)
    ; GFX9: $vgpr0_vgpr1 = COPY [[CONCAT_VECTORS]](<4 x s16>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<4 x s16>) = G_LOAD %0 :: (load 8, addrspace 5, align 8)
    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_p1_align8
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_p1_align8
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(p1) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[MV]](p1)
    ; VI-LABEL: name: test_load_private_p1_align8
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(p1) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[MV]](p1)
    ; GFX9-LABEL: name: test_load_private_p1_align8
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(p1) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[MV]](p1)
    %0:_(p5) = COPY $vgpr0
    %1:_(p1) = G_LOAD %0 :: (load 8, addrspace 5, align 8)

    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_p1_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_p1_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(p1) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[MV]](p1)
    ; VI-LABEL: name: test_load_private_p1_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(p1) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[MV]](p1)
    ; GFX9-LABEL: name: test_load_private_p1_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(p1) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[MV]](p1)
    %0:_(p5) = COPY $vgpr0
    %1:_(p1) = G_LOAD %0 :: (load 8, addrspace 5, align 4)

    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_v2s32_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s32_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; VI-LABEL: name: test_load_private_v2s32_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; GFX9-LABEL: name: test_load_private_v2s32_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s32>) = G_LOAD %0 :: (load 8, addrspace 5, align 4)

    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_v2s32_align8
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s32_align8
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; VI-LABEL: name: test_load_private_v2s32_align8
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    ; GFX9-LABEL: name: test_load_private_v2s32_align8
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: $vgpr0_vgpr1 = COPY [[BUILD_VECTOR]](<2 x s32>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s32>) = G_LOAD %0 :: (load 8, addrspace 5, align 8)

    $vgpr0_vgpr1 = COPY %1
...

---
name: test_load_private_v3s32_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v3s32_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; CI: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    ; VI-LABEL: name: test_load_private_v3s32_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; VI: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    ; GFX9-LABEL: name: test_load_private_v3s32_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<3 x s32>) = G_LOAD %0 :: (load 12, addrspace 5, align 4)

    $vgpr0_vgpr1_vgpr2 = COPY %1
...

---
name: test_load_private_v3s32_align16
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v3s32_align16
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; CI: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    ; VI-LABEL: name: test_load_private_v3s32_align16
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; VI: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    ; GFX9-LABEL: name: test_load_private_v3s32_align16
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2 = COPY [[BUILD_VECTOR]](<3 x s32>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<3 x s32>) = G_LOAD %0 :: (load 12, addrspace 5, align 16)

    $vgpr0_vgpr1_vgpr2 = COPY %1
...

---
name: test_load_private_v4s32_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v4s32_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<4 x s32>)
    ; VI-LABEL: name: test_load_private_v4s32_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<4 x s32>)
    ; GFX9-LABEL: name: test_load_private_v4s32_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 12
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s32>) = G_BUILD_VECTOR [[LOAD]](s32), [[LOAD1]](s32), [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<4 x s32>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<4 x s32>) = G_LOAD %0 :: (load 16, addrspace 5, align 4)

    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_load_private_v2s64_align4
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s64_align4
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64)
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<2 x s64>)
    ; VI-LABEL: name: test_load_private_v2s64_align4
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64)
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<2 x s64>)
    ; GFX9-LABEL: name: test_load_private_v2s64_align4
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<2 x s64>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s64>) = G_LOAD %0 :: (load 16, addrspace 5, align 4)

    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_load_private_v2s64_align16
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v2s64_align16
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64)
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<2 x s64>)
    ; VI-LABEL: name: test_load_private_v2s64_align16
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64)
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<2 x s64>)
    ; GFX9-LABEL: name: test_load_private_v2s64_align16
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 16, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<2 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3 = COPY [[BUILD_VECTOR]](<2 x s64>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<2 x s64>) = G_LOAD %0 :: (load 16, addrspace 5, align 16)

    $vgpr0_vgpr1_vgpr2_vgpr3 = COPY %1
...

---
name: test_load_private_v3s64_align32
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v3s64_align32
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 32, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CI: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C3]](s32)
    ; CI: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 4, align 16, addrspace 5)
    ; CI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C4]](s32)
    ; CI: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD4]](s32), [[LOAD5]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64), [[MV2]](s64)
    ; CI: [[DEF:%[0-9]+]]:_(<4 x s64>) = G_IMPLICIT_DEF
    ; CI: [[INSERT:%[0-9]+]]:_(<4 x s64>) = G_INSERT [[DEF]], [[BUILD_VECTOR]](<3 x s64>), 0
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[INSERT]](<4 x s64>)
    ; VI-LABEL: name: test_load_private_v3s64_align32
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 32, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; VI: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C3]](s32)
    ; VI: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 4, align 16, addrspace 5)
    ; VI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C4]](s32)
    ; VI: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD4]](s32), [[LOAD5]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64), [[MV2]](s64)
    ; VI: [[DEF:%[0-9]+]]:_(<4 x s64>) = G_IMPLICIT_DEF
    ; VI: [[INSERT:%[0-9]+]]:_(<4 x s64>) = G_INSERT [[DEF]], [[BUILD_VECTOR]](<3 x s64>), 0
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[INSERT]](<4 x s64>)
    ; GFX9-LABEL: name: test_load_private_v3s64_align32
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 32, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX9: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C3]](s32)
    ; GFX9: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 4, align 16, addrspace 5)
    ; GFX9: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C4]](s32)
    ; GFX9: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD4]](s32), [[LOAD5]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<3 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64), [[MV2]](s64)
    ; GFX9: [[DEF:%[0-9]+]]:_(<4 x s64>) = G_IMPLICIT_DEF
    ; GFX9: [[INSERT:%[0-9]+]]:_(<4 x s64>) = G_INSERT [[DEF]], [[BUILD_VECTOR]](<3 x s64>), 0
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[INSERT]](<4 x s64>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<3 x s64>) = G_LOAD %0 :: (load 32, addrspace 5, align 32)
    %2:_(<4 x s64>) = G_IMPLICIT_DEF
    %3:_(<4 x s64>) = G_INSERT %2, %1, 0
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %3
...

---
name: test_load_private_v4s64_align32
body: |
  bb.0:
    liveins: $vgpr0

    ; CI-LABEL: name: test_load_private_v4s64_align32
    ; CI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; CI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 32, addrspace 5)
    ; CI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; CI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; CI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; CI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; CI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; CI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; CI: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C3]](s32)
    ; CI: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 4, align 16, addrspace 5)
    ; CI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C4]](s32)
    ; CI: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD4]](s32), [[LOAD5]](s32)
    ; CI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; CI: [[GEP5:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C5]](s32)
    ; CI: [[LOAD6:%[0-9]+]]:_(s32) = G_LOAD [[GEP5]](p5) :: (load 4, align 8, addrspace 5)
    ; CI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; CI: [[GEP6:%[0-9]+]]:_(p5) = G_GEP [[GEP5]], [[C6]](s32)
    ; CI: [[LOAD7:%[0-9]+]]:_(s32) = G_LOAD [[GEP6]](p5) :: (load 4, addrspace 5)
    ; CI: [[MV3:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD6]](s32), [[LOAD7]](s32)
    ; CI: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64), [[MV2]](s64), [[MV3]](s64)
    ; CI: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[BUILD_VECTOR]](<4 x s64>)
    ; VI-LABEL: name: test_load_private_v4s64_align32
    ; VI: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; VI: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 32, addrspace 5)
    ; VI: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; VI: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; VI: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; VI: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; VI: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; VI: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; VI: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; VI: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C3]](s32)
    ; VI: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 4, align 16, addrspace 5)
    ; VI: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C4]](s32)
    ; VI: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD4]](s32), [[LOAD5]](s32)
    ; VI: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; VI: [[GEP5:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C5]](s32)
    ; VI: [[LOAD6:%[0-9]+]]:_(s32) = G_LOAD [[GEP5]](p5) :: (load 4, align 8, addrspace 5)
    ; VI: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; VI: [[GEP6:%[0-9]+]]:_(p5) = G_GEP [[GEP5]], [[C6]](s32)
    ; VI: [[LOAD7:%[0-9]+]]:_(s32) = G_LOAD [[GEP6]](p5) :: (load 4, addrspace 5)
    ; VI: [[MV3:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD6]](s32), [[LOAD7]](s32)
    ; VI: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64), [[MV2]](s64), [[MV3]](s64)
    ; VI: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[BUILD_VECTOR]](<4 x s64>)
    ; GFX9-LABEL: name: test_load_private_v4s64_align32
    ; GFX9: [[COPY:%[0-9]+]]:_(p5) = COPY $vgpr0
    ; GFX9: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p5) :: (load 4, align 32, addrspace 5)
    ; GFX9: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C]](s32)
    ; GFX9: [[LOAD1:%[0-9]+]]:_(s32) = G_LOAD [[GEP]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD]](s32), [[LOAD1]](s32)
    ; GFX9: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; GFX9: [[GEP1:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C1]](s32)
    ; GFX9: [[LOAD2:%[0-9]+]]:_(s32) = G_LOAD [[GEP1]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP2:%[0-9]+]]:_(p5) = G_GEP [[GEP1]], [[C2]](s32)
    ; GFX9: [[LOAD3:%[0-9]+]]:_(s32) = G_LOAD [[GEP2]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV1:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD2]](s32), [[LOAD3]](s32)
    ; GFX9: [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 16
    ; GFX9: [[GEP3:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C3]](s32)
    ; GFX9: [[LOAD4:%[0-9]+]]:_(s32) = G_LOAD [[GEP3]](p5) :: (load 4, align 16, addrspace 5)
    ; GFX9: [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP4:%[0-9]+]]:_(p5) = G_GEP [[GEP3]], [[C4]](s32)
    ; GFX9: [[LOAD5:%[0-9]+]]:_(s32) = G_LOAD [[GEP4]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV2:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD4]](s32), [[LOAD5]](s32)
    ; GFX9: [[C5:%[0-9]+]]:_(s32) = G_CONSTANT i32 24
    ; GFX9: [[GEP5:%[0-9]+]]:_(p5) = G_GEP [[COPY]], [[C5]](s32)
    ; GFX9: [[LOAD6:%[0-9]+]]:_(s32) = G_LOAD [[GEP5]](p5) :: (load 4, align 8, addrspace 5)
    ; GFX9: [[C6:%[0-9]+]]:_(s32) = G_CONSTANT i32 4
    ; GFX9: [[GEP6:%[0-9]+]]:_(p5) = G_GEP [[GEP5]], [[C6]](s32)
    ; GFX9: [[LOAD7:%[0-9]+]]:_(s32) = G_LOAD [[GEP6]](p5) :: (load 4, addrspace 5)
    ; GFX9: [[MV3:%[0-9]+]]:_(s64) = G_MERGE_VALUES [[LOAD6]](s32), [[LOAD7]](s32)
    ; GFX9: [[BUILD_VECTOR:%[0-9]+]]:_(<4 x s64>) = G_BUILD_VECTOR [[MV]](s64), [[MV1]](s64), [[MV2]](s64), [[MV3]](s64)
    ; GFX9: $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY [[BUILD_VECTOR]](<4 x s64>)
    %0:_(p5) = COPY $vgpr0
    %1:_(<4 x s64>) = G_LOAD %0 :: (load 32, addrspace 5, align 32)
    $vgpr0_vgpr1_vgpr2_vgpr3_vgpr4_vgpr5_vgpr6_vgpr7 = COPY %1
...

