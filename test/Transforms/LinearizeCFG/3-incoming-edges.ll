; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -linearize-cfg -linearize-whole-function %s | FileCheck %s

define void @incoming_3_edges_no_loop(i32 addrspace(1)* %out, i32 %n, i1 %arg0, i1 %arg1) {
; CHECK-LABEL: @incoming_3_edges_no_loop(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[ENTRY_LOAD:%.*]] = load volatile i32, i32 addrspace(1)* null
; CHECK-NEXT:    [[ENTRY_SUCC_ID:%.*]] = select i1 [[ARG0:%.*]], i32 3, i32 1
; CHECK-NEXT:    br label [[CONTINUE0_GUARD:%.*]]
; CHECK:       continue0.guard:
; CHECK-NEXT:    [[PREV_GUARD:%.*]] = icmp eq i32 [[ENTRY_SUCC_ID]], 1
; CHECK-NEXT:    br i1 [[PREV_GUARD]], label [[CONTINUE0:%.*]], label [[CONTINUE1_GUARD:%.*]]
; CHECK:       continue0:
; CHECK-NEXT:    [[CONTINUE0_LOAD:%.*]] = load volatile i32, i32 addrspace(1)* null
; CHECK-NEXT:    [[CONTINUE0_SUCC_ID:%.*]] = select i1 [[ARG1:%.*]], i32 3, i32 2
; CHECK-NEXT:    br label [[CONTINUE1_GUARD]]
; CHECK:       continue1.guard:
; CHECK-NEXT:    [[I_PH2:%.*]] = phi i32 [ [[ENTRY_LOAD]], [[CONTINUE0_GUARD]] ], [ [[CONTINUE0_LOAD]], [[CONTINUE0]] ]
; CHECK-NEXT:    [[GUARD_VAR:%.*]] = phi i32 [ [[ENTRY_SUCC_ID]], [[CONTINUE0_GUARD]] ], [ [[CONTINUE0_SUCC_ID]], [[CONTINUE0]] ]
; CHECK-NEXT:    [[PREV_GUARD1:%.*]] = icmp eq i32 [[GUARD_VAR]], 2
; CHECK-NEXT:    br i1 [[PREV_GUARD1]], label [[CONTINUE1:%.*]], label [[MULTI_PRED_GUARD:%.*]]
; CHECK:       continue1:
; CHECK-NEXT:    [[CONTINUE1_LOAD:%.*]] = load volatile i32, i32 addrspace(1)* null
; CHECK-NEXT:    br label [[MULTI_PRED_GUARD]]
; CHECK:       multi_pred.guard:
; CHECK-NEXT:    [[GUARD_VAR3:%.*]] = phi i32 [ 3, [[CONTINUE1]] ], [ [[GUARD_VAR]], [[CONTINUE1_GUARD]] ]
; CHECK-NEXT:    [[I_PH:%.*]] = phi i32 [ [[CONTINUE1_LOAD]], [[CONTINUE1]] ], [ [[I_PH2]], [[CONTINUE1_GUARD]] ]
; CHECK-NEXT:    [[PREV_GUARD4:%.*]] = icmp eq i32 [[GUARD_VAR3]], 3
; CHECK-NEXT:    br i1 [[PREV_GUARD4]], label [[MULTI_PRED:%.*]], label [[RETURN_GUARD:%.*]]
; CHECK:       multi_pred:
; CHECK-NEXT:    [[I:%.*]] = phi i32 [ [[I_PH]], [[MULTI_PRED_GUARD]] ]
; CHECK-NEXT:    [[PTR:%.*]] = getelementptr i32, i32 addrspace(1)* [[OUT:%.*]], i32 [[I]]
; CHECK-NEXT:    store i32 [[I]], i32 addrspace(1)* [[PTR]], align 4
; CHECK-NEXT:    br label [[RETURN_GUARD]]
; CHECK:       return.guard:
; CHECK-NEXT:    br label [[RETURN:%.*]]
; CHECK:       return:
; CHECK-NEXT:    ret void
;
entry:
  %entry.load = load volatile i32, i32 addrspace(1)* null
  br i1 %arg0, label %multi_pred, label %continue0

continue0:
  %continue0.load = load volatile i32, i32 addrspace(1)* null
  br i1 %arg1, label %multi_pred, label %continue1

continue1:
  %continue1.load = load volatile i32, i32 addrspace(1)* null
  br label %multi_pred

multi_pred:
  %i = phi i32 [%entry.load, %entry], [%continue0.load, %continue0], [%continue1.load, %continue1]
  %ptr = getelementptr i32, i32 addrspace(1)* %out, i32 %i
  store i32 %i, i32 addrspace(1)* %ptr, align 4
  br label %return

return:
  ret void
}
